@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

}

body {
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
    min-height: 100vh;
    padding: 20px;
}

.container1 {
    max-width: 800px;
    min-height: 200px;
    border: 1px solid black;
    margin-inline: auto;
    display: flex;
    justify-content: space-evenly;
    /* justify-content: center;
    justify-content: flex-start;
    justify-content: flex-end;
    justify-content: space-around;
    justify-content: space-evenly;
    gap: 1rem;
     */
    /* 
    --  "Aligning items property will make the items to take the minimun size they need"----
   
    align-items: flex-end;
    align-itms: flex-start;
    align-items: center */
    align-items: center;
    flex-flow: row wrap;
    align-content: space-evenly;
    /* 
    flex-direction: column;
    flex-direction: row;
    flex-direction: row-reverse;
    flex-direction:column-reverse; 
    flex-wrap:wrap;
    --- these two properties combined to make flex-flow property.
     ---flex-wrap helps to prevent overflow of the content
    */

}

.box {
    background-color: black;
    color: white;
    min-width: 100px;
    min-height: 100px;
    font-size: 2rem;
    padding: 0.5rem;
    border: 5px solid rgb(90, 150, 12);
    border-radius: 10px;
    border-style: outset;
    display: flex;
    justify-content: center;
    align-items: center;

}

.box:nth-child(2) {
    order: 3;
}

.container2 {

    max-width: 800px;
    min-height: 200px;
    border: 3px solid black;
    margin: 1rem auto;
    display: flex;
    gap: 1rem;
    justify-content: space-evenly;
    align-items: center;
}

.box1 {
    background-color: black;
    color: white;
    /* 
    min-width: 100px; */
    min-height: 100px;
    font-size: 2rem;
    padding: 0.5rem;
    border: 5px solid rgb(90, 150, 12);
    border-radius: 10px;
    border-style: outset;
    display: flex;
    justify-content: center;
    align-items: center;
    /* flex-grow: 1; it will use the space equally */
    flex-basis: 250px;
}

.box1:nth-child(2) {
    flex-grow: 2;
    order: -1;
    /*In this case the second child will get 2 times the space that the first child got */
}

.container3 {

    max-width: 800px;
    min-height: 200px;
    border: 3px solid black;
    margin: 1rem auto;
    display: flex;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
}

.box2 {

    background-color: black;
    color: white;
    /* 
    min-width: 100px; */
    min-height: 100px;
    font-size: 2rem;
    padding: 0.5rem;
    border: 5px solid rgb(90, 150, 12);
    border-radius: 10px;
    border-style: outset;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    flex-basis: 250px;
    /* flex-shrink: 1; 
    ---items will shrink equally---
    */
}

.box2:nth-child(1) {
    flex-shrink: 2;
}

/*
---flex--- 
flex property combine flex-grow,flex-shrink,flex-basis
we can provide three values to a single property
like this
flex: 1 1 250px;

flex:1 1 40%;
*/